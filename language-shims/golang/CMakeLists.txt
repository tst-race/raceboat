
# 
# Copyright 2023 Two Six Technologies
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 

################################################################################
# Setup SWIG
################################################################################

cmake_policy(SET CMP0078 NEW)
cmake_policy(SET CMP0086 NEW)
find_package(SWIG REQUIRED COMPONENTS go)
set(UseSWIG_MODULE_VERSION 2)
include(${SWIG_USE_FILE})

if(ANDROID)
    # Have to ignore unresolved symbols since the go implementations of the generated functions
    # are not compiled here, but rather in the golang plugins. The Android toolchain sets the
    # --no-undefined linker flag by default, which results in undefined reference errors.
    set(CMAKE_SHARED_LINKER_FLAGS "-Wl,--warn-unresolved-symbols ${CMAKE_SHARED_LINKER_FLAGS}")
endif()

set(CMAKE_SWIG_FLAGS "-DSWIGWORDSIZE64")
set(SWIG_COMPILE_FLAGS "${SWIG_COMPILE_FLAGS} -DSWIG_TYPE_TABLE=RaceSdk")


################################################################################
# Shims headers
################################################################################

set(COMMS_GO_HEADER ${CMAKE_CURRENT_BINARY_DIR}/include/src/shims/commsPluginBindingsGO_wrap.h)

add_custom_target(swigGoHeader DEPENDS ${SWIG_GO_HEADER})

# Create a target that other targets may used to include the headers generated by swig
add_library(golang-shims-headers INTERFACE)
add_dependencies(golang-shims-headers swigGoHeader)
# Specify these headers as SYSTEM headers so they don't generate warnings in consuming targets
target_include_directories(golang-shims-headers SYSTEM INTERFACE
  $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/include>
  $<INSTALL_INTERFACE:include>
)

set_target_properties(golang-shims-headers PROPERTIES
  PUBLIC_HEADER "${COMMS_GO_HEADER}"
)

# ################################################################################
# # Golang Comms
# ################################################################################
  
set_source_files_properties(commsPluginBindings.golang.i PROPERTIES
  TYPE MODULE
  CPLUSPLUS ON
  SWIG_FLAGS "-intgosize;64;-package;commsShims"
)
swig_add_library(commsPluginBindingsGolang TYPE SHARED
  LANGUAGE go
  SOURCES commsPluginBindings.golang.i
  OUTPUT_DIR "${CMAKE_CURRENT_BINARY_DIR}/include/src/shims"
)
add_dependencies(commsPluginBindingsGolang raceSdkCommon)
set_target_properties(commsPluginBindingsGolang PROPERTIES
  SWIG_USE_TARGET_INCLUDE_DIRECTORIES TRUE
  COMPILE_OPTIONS "-Wno-error" # Clear warnings set globally via add_compile_options
)
  
swig_link_libraries(commsPluginBindingsGolang golang-shims-headers raceSdkCommon)

if(NOT ANDROID)
  # ################################################################################
  # # Golang Core
  # ################################################################################

  set_source_files_properties(corePluginBindings.golang.i PROPERTIES
    TYPE MODULE
    CPLUSPLUS ON
    SWIG_FLAGS "-intgosize;64;-package;coreShims"
  )
  swig_add_library(corePluginBindingsGolang TYPE SHARED
    LANGUAGE go
    SOURCES corePluginBindings.golang.i
    OUTPUT_DIR "${CMAKE_CURRENT_BINARY_DIR}/include/src/core"
  )
  add_dependencies(corePluginBindingsGolang raceSdkCommon)
  set_target_properties(corePluginBindingsGolang PROPERTIES
    SWIG_USE_TARGET_INCLUDE_DIRECTORIES TRUE
    COMPILE_OPTIONS "-Wno-error" # Clear warnings set globally via add_compile_options
  )
  
  swig_link_libraries(corePluginBindingsGolang raceSdkCommon)
endif()


# ################################################################################
# # Install
# ################################################################################

# Comm Golang bindings
install(
  TARGETS commsPluginBindingsGolang
  LIBRARY DESTINATION lib
)
install(
  FILES ${CMAKE_CURRENT_BINARY_DIR}/include/src/shims/commsPluginBindingsGolang.go
  DESTINATION go/src/shims/comm
)

if(NOT ANDROID)
  # Core Golang bindings
  install(
    TARGETS corePluginBindingsGolang
    LIBRARY DESTINATION lib
  )
  
  install(
    FILES ${CMAKE_CURRENT_BINARY_DIR}/include/src/core/corePluginBindingsGolang.go
    DESTINATION go/src/shims/core
  )
  
  install(SCRIPT "init_go.cmake")
endif()
